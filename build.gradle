apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


buildscript {

    ext {
        bintrayRepo = 'ArchData'
        bintrayName = 'ArchData'

        publishedGroupId = 'me.ibrahimyilmaz'
        libraryName = 'ArchData'
        artifact = 'ArchData'

        libraryDescription = 'LiveData types for Publishing and Replaying Data'

        siteUrl = 'https://github.com/ibrahimyilmaz/ArchData'
        gitUrl = 'https://github.com/ibrahimyilmaz/ArchData.git'

        libraryVersion = '0.0.3'

        developerId = 'ibrahimyilmaz'
        developerName = 'Ibrahim Yilmaz'
        developerEmail = 'cs.ibrahimyilmaz@gmail.com'

        licenseName = 'MIT License'
        licenseUrl = 'https://github.com/ibrahimyilmaz/ArchData/blob/master/LICENCE'
        allLicenses = ["MIT"]
    }

    ext.lib_version = [
            kotlin       : '1.3.0',
            lifecycle    : '2.0.0',
            mockito      : '2.10.0',
            mockitoKotlin: "2.0.0-RC1"
    ]

    ext.libraries = [
            kotlin       : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$lib_version.kotlin",
            mockito      : "org.mockito:mockito-core:$lib_version.mockito",
            mockitoKotlin: "com.nhaarman.mockitokotlin2:mockito-kotlin:$lib_version.mockitoKotlin"
    ]
    ext.libraries.lifeCycle = [
            extensions: "androidx.lifecycle:lifecycle-extensions:$lib_version.lifecycle",
            viewModel : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lib_version.lifecycle",
            runTime   : "androidx.lifecycle:lifecycle-runtime:$lib_version.lifecycle",
            compiler  : "androidx.lifecycle:lifecycle-compiler:$lib_version.lifecycle",
            testing   : "androidx.arch.core:core-testing:$lib_version.lifecycle"
    ]
    ext.dependencies_version = [
            gradle: '3.3.2',
    ]

    ext.build_dependencies = [
            gradle: "com.android.tools.build:gradle:$dependencies_version.gradle",
            kotlin: "org.jetbrains.kotlin:kotlin-gradle-plugin:$lib_version.kotlin"
    ]

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath build_dependencies.gradle
        classpath build_dependencies.kotlin
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'


allprojects {
    repositories {
        google()
        jcenter()
    }

    tasks.withType(Javadoc) {
        enabled = false
    }
}


android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        ignore 'InvalidPackage'
    }
}

android.testOptions.unitTests.all {
    // Configure whether failing tests should fail the build
    ignoreFailures false

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation libraries.kotlin
    implementation libraries.lifeCycle.extensions
    implementation libraries.lifeCycle.viewModel
    implementation libraries.lifeCycle.runTime
    implementation libraries.lifeCycle.compiler
    kapt libraries.lifeCycle.compiler

    testImplementation libraries.mockito
    testImplementation libraries.mockitoKotlin
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    testImplementation libraries.lifeCycle.testing
}
repositories {
    mavenCentral()
}

group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}


bintray {
    user = System.getenv('bintray_user')
    key = System.getenv('bintray_apikey')

    configurations = ['archives']
    System.out.println('archives')
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}

